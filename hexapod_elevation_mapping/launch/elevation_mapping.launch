<launch>

    <!-- ================================ Settings ================================ -->
    <arg name="sim" default="true"/>
    <arg name="tf_pub_interval" default="20"/>

    <!-- Topic Name -->
    <arg name="lidarpc_topic_name" default="/elspider_air/velodyne_points2"/>
    <arg name="odom_topic_name" default="/torso_odom"/>
    <!-- Frame Name -->
    <arg name="world_frame_name" default="world"/>
    <arg name="odom_frame_name" default="odom"/>
    <arg name="base_frame_name" default="base"/>
    <arg name="lidar_frame_name" default="velodyneLidar"/>
    <!-- Installation TF -->
    <arg name="base2lidar_tf" default="0.30 0.0 0.35 1.57 0.3 0.0"/>
    <arg name="odom2base_tf" default="0.0 0.0 0.0 0.0 0.0 0.0"/>


    <!-- ================================ Launch Program ================================ -->

    <!-- Start Sensor Simulation -->
    <group if="$(eval sim == false)">
        <include file="$(find realsense2_camera)/launch/rs_t265.launch"/>
        <include file="$(find velodyne_pointcloud)/launch/VLP16_points.launch">
            <arg name="calibration" value="$(find hexapod_elevation_mapping)/config/sensor/VLP16.yaml"/>
            <arg name="frame_id" value="$(arg lidar_frame_name)"/>
            <!-- <arg name="min_range" value="0.4"/> -->
            <!-- <arg name="max_range" value="130.0"/> -->
        </include>
    </group>

    <!-- Elevation Mapping -->
    <node pkg="elevation_mapping" type="elevation_mapping" name="elevation_mapping" output="screen">
        <rosparam command="load" file="$(find hexapod_elevation_mapping)/config/robots/elspider_air.yaml"/>
        <param name="map_frame_id" type="string" value="$(arg world_frame_name)"/>
        <param name="robot_base_frame_id" type="string" value="$(arg base_frame_name)"/>
        <param name="track_point_frame_id" type="string" value="$(arg base_frame_name)"/>
        <param name="input_sources/ground_truth_cloud/topic" type="string" value="$(arg lidarpc_topic_name)"/>
        <rosparam command="load" file="$(find hexapod_elevation_mapping)/config/elevation_maps/simple_demo_map.yaml" />
        <rosparam command="load" file="$(find hexapod_elevation_mapping)/config/postprocessing/postprocessor_pipeline.yaml" />
    </node>

    <!-- TF Pub -->
    <node pkg="hexapod_elevation_mapping" name="world2odom_pub" type="world2odom_pub" output="screen" ns="elspider_air">
        <param name="odom_topic_name" type="string" value="$(arg odom_topic_name)"/>
        <param name="odom_frame_name" type="string" value="$(arg odom_frame_name)"/>
        <param name="world_frame_name" type="string" value="$(arg world_frame_name)"/>
    </node>

    <node pkg="tf" type="static_transform_publisher" name="base2lidar" args="$(arg base2lidar_tf) $(arg base_frame_name) $(arg lidar_frame_name) $(arg tf_pub_interval)"/>
    <node pkg="tf" type="static_transform_publisher" name="odom2base" args="$(arg odom2base_tf) $(arg odom_frame_name) $(arg base_frame_name)  $(arg tf_pub_interval)"/>

    <!-- <node name="kinect_processing_Node" pkg="hitSpider" type="kinect_processing_Node" output="screen"/> -->

    <!-- <node name="map_segmentation" pkg="hitSpider" type="map_segmentation" output="screen"/>
    <node pkg="grid_map_visualization" type="grid_map_visualization" name="grid_map_visualization" output="screen">
        <rosparam command="load" file="$(find hitSpider)/parameters/mapVisual.yaml" />
    </node> -->

</launch>
