<launch>
    <arg name="sim" value="true"/>
    <arg name="gui" value="true"/>

    <arg name="odom_topic_name" value="torso_odom" if="$(eval sim == true)"/>
    <arg name="odom_topic_name" value="/camera/odom/sample" unless="$(eval sim == true)"/>

    <group if="$(eval sim == false)">
        <include file="$(find realsense2_camera)/launch/rs_t265.launch"/>
        <include file="$(find velodyne_pointcloud)/launch/VLP16_points.launch">
            <!-- TODO -->
            <arg name="calibration" value="$(find hexapod_elevation_mapping)/config/sensor/VLP16.yaml"/>
            <arg name="frame_id" value="velodeny"/>
            <arg name="fixed_frame" value="world"/>
            <arg name="target_frame" value="base_link"/>
            <!-- <arg name="min_range" value="0.4"/> -->
            <!-- <arg name="max_range" value="130.0"/> -->
        </include>
    </group>

    <node pkg="elevation_mapping" type="elevation_mapping" name="elevation_mapping" output="screen">
        <rosparam command="load" file="$(find hexapod_elevation_mapping)/config/robots/elspider_air.yaml" />
        <rosparam command="load" file="$(find hexapod_elevation_mapping)/config/elevation_maps/simple_demo_map.yaml" />
        <rosparam command="load" file="$(find hexapod_elevation_mapping)/config/postprocessing/postprocessor_pipeline.yaml" />
    </node>

    <node pkg="hexapod_elevation_mapping" name="hexapod_tf_pub_node" type="hexapod_tf_pub_node" output="screen" ns="elspider_air">
        <param name="odom_topic_name"                                 type="string"  value="$(arg odom_topic_name)"/>
        <param name="base_link2velodyne_lidar_x_trans_offset"        type="double"  value="0.30"/>
        <param name="base_link2velodyne_lidar_y_trans_offset"        type="double"  value="0.0"/>
        <param name="base_link2velodyne_lidar_z_trans_offset"        type="double"  value="0.2"/>
        <param name="base_link2velodyne_lidar_pitch_revolute_offset" type="double"  value="0.3"/>
        <param name="base_link2velodyne_lidar_roll_revolute_offset"  type="double"  value="0.0"/>
        <param name="base_link2velodyne_lidar_yaw_revolute_offset"   type="double"  value="1.57"/>

        <param name="odom_link2base_link_x_trans_offset"        type="double"  value="-0.36"/>
        <param name="odom_link2base_link_y_trans_offset"        type="double"  value="0.0"/>
        <param name="odom_link2base_link_z_trans_offset"        type="double"  value="0.4"/>
        <param name="odom_link2base_link_pitch_revolute_offset" type="double"  value="0.0"/>
        <param name="odom_link2base_link_roll_revolute_offset"  type="double"  value="-3.68"/>
        <param name="odom_link2base_link_yaw_revolute_offset"   type="double"  value="3.14"/>
    </node>

    <!-- <node pkg="tf" type="static_transform_publisher" name="base_link2laser" args="0.14 0.0 0.0 0.0 0.0 0.0 /base_link /velodyneLidar 40" />
    <node pkg="tf" type="static_transform_publisher" name="odom2base_link" args="0.14 0.0 0.0 0.0 0.0 0.0 /odom /base_link 40" />
    <node pkg="tf" type="static_transform_publisher" name="world2odom" args="0.14 0.0 0.0 0.0 0.0 0.0 /world /odom 40" /> -->

    <!-- rviz-->
    <group if="$(eval gui == true)">
        <node name="rviz" pkg="rviz" type="rviz" args="-d $(find hexapod_elevation_mapping)/config/rviz/elspider_air_mapping.rviz" required="true"/>
    </group>
    <!-- <node name="kinect_processing_Node" pkg="hitSpider" type="kinect_processing_Node" output="screen"/> -->

    <!-- <node name="map_segmentation" pkg="hitSpider" type="map_segmentation" output="screen"/>
    <node pkg="grid_map_visualization" type="grid_map_visualization" name="grid_map_visualization" output="screen">
        <rosparam command="load" file="$(find hitSpider)/parameters/mapVisual.yaml" />
    </node> -->

</launch>